@page "/tv-shows"

@inject IHttpClientFactory http

<Piral.Blazor.Shared.MfComponent Name="search" />
<section class="container">
    <h2>Popular TV Shows</h2>
    <div id="popular-shows" class="grid">
        @foreach (var show in popular)
        {
            <div class="card">
                <a href="/tv-shows/@show.id">
                    <img src="https://image.tmdb.org/t/p/w500@(show.poster_path)" class="card-img-top" alt="@show.name" />`
                </a>
                <div class="card-body">
                    <h5 class="card-title">@show.name</h5>
                    <p class="card-text">
                        <small class="text-muted">Air Date: @show.first_air_date</small>
                    </p>
                </div>
            </div>
        }
    </div>
</section>

@if (loading)
{
    <Spinner />
}

@code {
    bool loading = true;
    List<ShowItem> popular = new();

    async Task LoadData()
    {
        var client = http.CreateClient();
        var key = "3fd2be6f0c70a2a598f084ddfb75487c";
        var response = await client.GetFromJsonAsync<ShowData>($"https://api.themoviedb.org/3/tv/popular?api_key={key}&language=en-US");

        await this.InvokeAsync(() =>
        {
            loading = false;
            popular = response.results;
            this.StateHasChanged();
        });
    }

    protected override Task OnInitializedAsync()
    {
        _ = LoadData();
        return base.OnInitializedAsync();
    }

    class ShowItem
    {
        public bool adult { get; set; }

        public string backdrop_path { get; set; }

        public List<int> genre_ids { get; set; }

        public int id { get; set; }

        public string original_language { get; set; }

        public string original_title { get; set; }

        public string overview { get; set; }

        public string poster_path { get; set; }

        public string name { get; set; }

        public string first_air_date { get; set; }

        public double popularity { get; set; }

        public double vote_average { get; set; }

        public int vote_count { get; set; }

        public bool video { get; set; }

    }

    class ShowData
    {
        public List<ShowItem> results { get; set; }

    }
}